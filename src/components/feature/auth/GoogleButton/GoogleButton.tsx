/* Path: src/components/feature/auth/GoogleButton/GoogleButton.tsx
   ---------------------------------------------------------------------------
   üîÑ **‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ** (‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏´‡πâ)
   1. **‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö prop `locale`** ‡∏≠‡∏µ‡∏Å‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‚Üí ‡∏õ‡∏¥‡∏î TS 2322 ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Login
   2. ‡πÄ‡∏û‡∏¥‡πà‡∏° `label` (optional) ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏° i18n ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
   3. ‡∏Ñ‡πà‡∏≤ `callbackUrl` ‡∏ï‡∏±‡πâ‡∏á default ‡πÄ‡∏õ‡πá‡∏ô `"/app"` ‡πÅ‡∏ï‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
   ------------------------------------------------------------------------- */
"use client";

import { signIn }  from "next-auth/react";
import { FcGoogle } from "react-icons/fc";
import React        from "react";

type Props = {
  /** URL ‡∏ó‡∏µ‡πà‡∏à‡∏∞ redirect ‡∏´‡∏•‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô (default = "/app") */
  callbackUrl?: string;
  /** ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô (px) */
  iconSize?: number;
  /** ‡∏õ‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (default = "Continue with Google") ‚Äì ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å i18n ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡πÑ‡∏î‡πâ */
  label?: string;
};

export const GoogleButton: React.FC<Props> = ({
  callbackUrl = "/app",
  iconSize = 20,
  label = "Continue with Google",
}) => {
  return (
    <button
      type="button"
      className="flex w-full items-center justify-center gap-2 rounded-lg border border-gray-300 bg-white px-4 py-2 text-sm font-medium shadow-sm transition hover:bg-gray-50"
      onClick={() => signIn("google", { callbackUrl })}
    >
      {/* Google Colored Icon */}
      <FcGoogle size={iconSize} />
      <span>{label}</span>
    </button>
  );
};
