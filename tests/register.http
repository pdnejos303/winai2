################################################################################
#  REGISTER API — FULL TEST SUITE
#  - ครอบคลุม Issue #1  (Email format + เลขขั้นต่ำ 8)
#              Issue #2  (Password strength: ต้องมีตัวอักษร + ตัวเลข)
#              Issue #3  (Always-JSON error response)
#
#  การใช้งาน:
#    1) รัน `npm run dev`   (Next.js ← http://localhost:3000)
#    2) เปิดไฟล์นี้ใน VS Code > คลิก “Send Request” ทีละเคส
#    3) สังเกต Status / JSON ในแท็บ Response:
#         400 / 409 → {"error": "..."}       (Content-Type: application/json)
#         200       → {"ok": true}
################################################################################


# ───────────────────────────────────────────────────────────────────────────────
#  ISSUE #3 – Always-JSON   (Payload ไม่ใช่ JSON → 400 JSON error)
# ───────────────────────────────────────────────────────────────────────────────

### [CASE-0] Payload ไม่ใช่ JSON                → Expected 400 Invalid JSON payload
POST http://localhost:3000/api/register
Content-Type: text/plain

this is not json



# ───────────────────────────────────────────────────────────────────────────────
#  ISSUE #1 – Email format validation
# ───────────────────────────────────────────────────────────────────────────────

### [CASE-1] Email format invalid               → Expected 400 Invalid email format
POST http://localhost:3000/api/register
Content-Type: application/json

{
  "email": "bad",
  "password": "abc12345"
}



# ───────────────────────────────────────────────────────────────────────────────
#  ISSUE #2 – Password strength rules
# ───────────────────────────────────────────────────────────────────────────────

### [CASE-2] Password length < 8                → Expected 400 Password must be at least 8 characters
POST http://localhost:3000/api/register
Content-Type: application/json

{
  "email": "user1@example.com",
  "password": "short"
}



### [CASE-3] Password NO number (A–Z only)      → Expected 400 must include number
POST http://localhost:3000/api/register
Content-Type: application/json

{
  "email": "user2@example.com",
  "password": "abcdefgh"
}



### [CASE-4] Password NO letter (0–9 only)      → Expected 400 must include letter
POST http://localhost:3000/api/register
Content-Type: application/json

{
  "email": "user3@example.com",
  "password": "12345678"
}



### [CASE-5] Valid (letter+number ≥ 8)          → Expected 200 {"ok": true}
#    ใช้ {{$timestamp}} เพื่อสุ่มอีเมลไม่ให้ซ้ำ
POST http://localhost:3000/api/register
Content-Type: application/json

{
  "email": "user{{$timestamp}}@example.com",
  "password": "abc12345"
}



# ───────────────────────────────────────────────────────────────────────────────
#  ISSUE #3 – Duplicate handling (JSON 409)
# ───────────────────────────────────────────────────────────────────────────────

### [CASE-6] Duplicate email                    → Expected 409 Email already used
#    ส่งอีเมลเดิมซ้ำจาก CASE-5 (ก๊อปอีเมลที่ตอบกลับใน 200)
POST http://localhost:3000/api/register
Content-Type: application/json

{
  "email": "user_to_dup@example.com",
  "password": "abc12345"
}
